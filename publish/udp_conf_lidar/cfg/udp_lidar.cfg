#!/usr/bin/env python
PACKAGE = "dynamic_lidar_conf"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()


gen.add("DAC_Freq",    int_t,    1, "lidar dac freq", 5,  1, 30)
gen.add("DAC_Low_V",   double_t,    2, "lidar DAC low value( is equal or lesser than DAC_High_V)", default=-1.0,  min=-5.0, max=4.9999)
gen.add("DAC_High_V",  double_t,    3, "lidar DAC high value(is equal or greater than DAC_Low_V)", default=1.0,  min=-5.0, max=4.9999)
gen.add("TTL_Freq",    int_t,    4, "lidar TTL freq", 150,  20, 1000)
gen.add("DC_cut",    int_t,    5, "lidar DC cut", 0,  0, 255)
gen.add("Threshold",    int_t,    6, "lidar threshold", 10,  0, 32767)
config_action_enum = gen.enum([ gen.const("editing",      int_t, 0, "param edit"),
                       gen.const("update",     int_t, 1, "param update"),
                       gen.const("default",      int_t, 2, "get param default")], "para curt status")


group1 = gen.add_group("lidar configure ctrl", state = True)

group1.add("config_action", int_t, 7, "curt status param", 0, 0, 2, edit_method=config_action_enum)


group2 = gen.add_group("lidar configure status", state=True)
group2.add("config_status", str_t, 8, "use to disp lidar configure status", "waiting user config......")


exit(gen.generate(PACKAGE, "dynamic_lidar_conf", "udp_lidar"))
